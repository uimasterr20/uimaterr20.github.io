{"version":3,"sources":["./src/app/servers/servers.service.ts","./src/app/servers/edit-server/edit-server.component.html","./src/app/servers/edit-server/edit-server.component.ts","./src/app/auth-guard.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/servers/server/server-resolver.service.ts","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/servers/edit-server/can-deactivate-guard.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/servers/server/server.component.ts","./src/app/servers/server/server.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/servers/servers.component.html","./src/app/servers/servers.component.ts","./src/app/users/users.component.html","./src/app/users/users.component.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/users/user/user.component.ts","./src/app/users/user/user.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class ServersService {\r\n  private servers = [\r\n    {\r\n      id: 1,\r\n      name: 'Productionserver',\r\n      status: 'online'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Testserver',\r\n      status: 'offline'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Devserver',\r\n      status: 'offline'\r\n    }\r\n  ];\r\n\r\n  getServers() {\r\n    return this.servers;\r\n  }\r\n\r\n  getServer(id: number) {\r\n    const server = this.servers.find(\r\n      (s) => {\r\n        return s.id === id;\r\n      }\r\n    );\r\n    return server;\r\n  }\r\n\r\n  updateServer(id: number, serverInfo: {name: string, status: string}) {\r\n    const server = this.servers.find(\r\n      (s) => {\r\n        return s.id === id;\r\n      }\r\n    );\r\n    if (server) {\r\n      server.name = serverInfo.name;\r\n      server.status = serverInfo.status;\r\n    }\r\n  }\r\n}\r\n","<h4 *ngIf=\"!allowEdit\">You're not allowed to edit!</h4>\r\n<div *ngIf=\"allowEdit\">\r\n  <form method=\"get\" action=\"\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Server Name</label>\r\n      <input type=\"text\" id=\"name\" class=\"form-control\" [(ngModel)]=\"serverName\"  [ngModelOptions]=\"{standalone: true}\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"status\">Server Status</label>\r\n      <select id=\"status\" class=\"form-control\" [(ngModel)]=\"serverStatus\"  [ngModelOptions]=\"{standalone: true}\">\r\n        <option value=\"online\">Online</option>\r\n        <option value=\"offline\">Offline</option>\r\n      </select>\r\n    </div>\r\n    <button class=\"btn btn-primary\" (click)=\"onUpdateServer()\">Update Server</button>\r\n  </form>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { ServersService } from '../servers.service';\r\nimport { CanComponentDeactivate } from './can-deactivate-guard.service';\r\n@Component({\r\n  selector: 'app-edit-server',\r\n  templateUrl: './edit-server.component.html',\r\n  styleUrls: ['./edit-server.component.scss']\r\n})\r\n\r\n\r\nexport class EditServerComponent implements OnInit, CanComponentDeactivate {\r\n  server: {id: number, name: string, status: string}  |any;\r\n  serverName = '';\r\n  serverStatus = '';\r\n  allowEdit = false;\r\n  changesSaved = false;\r\n\r\n  constructor(private serversService: ServersService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.route.snapshot.queryParams);\r\n    console.log(this.route.snapshot.fragment);\r\n    this.route.queryParams\r\n      .subscribe(\r\n        (queryParams: Params) => {\r\n          this.allowEdit = queryParams['allowEdit'] === '1' ? true : false;\r\n        }\r\n      );\r\n    this.route.fragment.subscribe();\r\n    const id = +this.route.snapshot.params['id'];\r\n    this.server = this.serversService.getServer(id);\r\n    // Subscribe route params to update the id if params change\r\n    this.serverName = this.server.name;\r\n    this.serverStatus = this.server.status;\r\n  }\r\n\r\n  onUpdateServer() {\r\n    this.serversService.updateServer(this.server.id, {name: this.serverName, status: this.serverStatus});\r\n    this.changesSaved = true;\r\n    this.router.navigate(['../'], {relativeTo: this.route});\r\n  }\r\n\r\n  canDeactivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (!this.allowEdit) {\r\n      return true;\r\n    }\r\n    if ((this.serverName !== this.server.name || this.serverStatus !== this.server.status) && !this.changesSaved) {\r\n      return confirm('Do you want to discard the changes?');\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Injectable\r\n} from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterState,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport {\r\n  Observable\r\n} from 'rxjs/Observable';\r\nimport {\r\n  AuthService\r\n} from './auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable < boolean > | Promise < boolean > | boolean {\r\n\r\n    return this.authService.isAuthenticated()\r\n      .then(\r\n        (authenticated: boolean | any) => {\r\n          if (authenticated) {\r\n            return true;\r\n          } else {\r\n            this.router.navigate(['/']);\r\n            return false;\r\n          }\r\n        }\r\n      );\r\n  }\r\n  canActivateChild(route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable < boolean > | Promise < boolean > | boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor( private router: Router, private authService: AuthService ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLoadsarver(id:number){\r\n    this.router.navigate(['/Servers', id, 'edit'], {queryParams:{allowEdit:1}, fragment: 'loading'})\r\n  }\r\n  onLogin() {\r\n    this.authService.login();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","<h4>Welcome to Server Manager 4.0</h4>\r\n<p>Manage your Servers and Users.</p>\r\n\r\n\r\n<button type=\"button\" name=\"\" id=\"\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"onLoadsarver(1)\">onLoadsarver</button>\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"onLogin()\"> logIn</button>\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"onLogout()\"> logOut</button>\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { ServersService } from '../servers.service';\r\n\r\ninterface Server {\r\n  id: number;\r\n  name: string;\r\n  status: string;\r\n}\r\n\r\n@Injectable()\r\nexport class ServerResolver implements Resolve<Server> {\r\n  constructor(private serversService: ServersService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Server> | Promise<Server> | Server {\r\n    return this.serversService.getServer(+route.params['id'] );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data } from '@angular/router';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n  errorMessage: string | undefined;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // this.errorMessage = this.route.snapshot.data['message'];\n    this.route.data.subscribe(\n      (data: Data) => {\n        this.errorMessage = data['message'];\n      }\n    );\n  }\n\n}\n","<h4>{{ errorMessage }}</h4>\n","import { Observable } from 'rxjs/Observable';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n}\r\n\r\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\r\n\r\n  canDeactivate(component: CanComponentDeactivate,\r\n                currentRoute: ActivatedRouteSnapshot,\r\n                currentState: RouterStateSnapshot,\r\n                nextState?: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return component.canDeactivate();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Router';\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\r\n      <ul class=\"nav nav-tabs\">\r\n        <li role=\"presentation\"  routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" ><a routerLink='/'>Home</a></li>\r\n        <li role=\"presentation\" routerLinkActive=\"active\"><a routerLink='Servers'>Servers</a></li>\r\n        <li role=\"presentation\" routerLinkActive=\"active\"><a [routerLink]=\"['Users']\"  >Users</a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n  <!-- <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\r\n      <app-home></app-home>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\r\n      <app-user></app-user>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\r\n      <app-servers></app-servers>\r\n\r\n    </div>\r\n  </div> -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params ,Router,Data} from '@angular/router';\r\n\r\nimport { ServersService } from '../servers.service';\r\n\r\n@Component({\r\n  selector: 'app-server',\r\n  templateUrl: './server.component.html',\r\n  styleUrls: ['./server.component.scss']\r\n})\r\nexport class ServerComponent implements OnInit {\r\n   server!: { id: number, name: string, status: string};\r\n\r\n  constructor(private serversService: ServersService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  ngOnInit() {\r\n    this.route.data\r\n      .subscribe(\r\n        (data: Data) => {\r\n          this.server = data['server'];\r\n        }\r\n      );\r\n    // const id = +this.route.snapshot.params['id'];\r\n    // this.server = this.serversService.getServer(id);\r\n    // this.route.params\r\n    //   .subscribe(\r\n    //     (params: Params) => {\r\n    //       this.server = this.serversService.getServer(+params['id']);\r\n    //     }\r\n    //   );\r\n  }\r\n  onEdit(){\r\nthis.router.navigate(['edit'], {relativeTo:this.route ,queryParamsHandling : 'preserve'})\r\n  };\r\n\r\n}\r\n","<h5>{{ server.name }}</h5>\r\n<p>Server status is {{ server.status }}</p>\r\n<button class=\"btn btn-primary\" (click)=\"onEdit()\">edit</button>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UserComponent } from './users/user/user.component';\r\nimport { ServersComponent } from './servers/servers.component';\r\nimport { ServerComponent } from './servers/server/server.component';\r\nimport { EditServerComponent } from './servers/edit-server/edit-server.component';\r\nimport { ServersService } from './servers/servers.service';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { AuthGuard } from './auth-guard.service';\r\nimport { AuthService } from './auth.service';\r\nimport { CanDeactivateGuard } from './servers/edit-server/can-deactivate-guard.service';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { ServerResolver } from './servers/server/server-resolver.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    UsersComponent,\r\n    ServersComponent,\r\n    UserComponent,\r\n    ServerComponent,\r\n    EditServerComponent,\r\n    PageNotFoundComponent,\r\n    ErrorPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule\r\n  ],\r\n  providers: [ServersService, AuthGuard, AuthService, CanDeactivateGuard,ServerResolver],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\r\nexport class AuthService {\r\n    loggedIn = false;\r\nisAuthenticated(){\r\n    const promsie =new Promise (\r\n        (resolve, reject)=>{\r\n            setTimeout(() => {\r\n                resolve(this.loggedIn);\r\n            }, 800);\r\n        }\r\n    );\r\n    return  promsie;\r\n}\r\n\r\n    login(){\r\n        this.loggedIn = true;\r\n    }\r\n    logout(){\r\n        this.loggedIn = false;\r\n    }\r\n}","<div class=\"row\">\r\n  <div class=\"col-xs-12 col-sm-4\">\r\n    <div class=\"list-group\">\r\n      <a\r\n        [routerLink]=\"['/Servers', server.id]\"\r\n        [queryParams]=\"{allowEdit: server.id === 3 ? '1' : '0'}\"\r\n        fragment=loading\r\n        href=\"#\"\r\n        routerLinkActive=\"router-link-active\" \r\n        class=\"list-group-item\"\r\n        *ngFor=\"let server of servers\">\r\n        {{ server.name }}\r\n      </a>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xs-12 col-sm-4\">\r\n  <router-outlet>\r\n  </router-outlet>\r\n    <!-- <button type=\"button\" name=\"\" id=\"\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"onReload()\">onReload</button>\r\n    <app-edit-server></app-edit-server>\r\n    <hr>\r\n    <app-server></app-server> -->\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServersService } from './servers.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-servers',\r\n  templateUrl: './servers.component.html',\r\n  styleUrls: ['./servers.component.scss']\r\n})\r\nexport class ServersComponent implements OnInit {\r\n  public servers: {id: number, name: string, status: string}[] = [];\r\n\r\n  // tslint:disable-next-line: typedef-whitespace\r\n  constructor(private serversService: ServersService, private router: Router, private route: ActivatedRoute ) { }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  ngOnInit() {\r\n    this.servers = this.serversService.getServers();\r\n  }\r\n  // tslint:disable-next-line: typedef\r\n  onReload(){\r\n    //  this.router.navigate(['/Servers']);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-4\">\r\n      <div class=\"list-group\">\r\n        <a\r\n          [routerLink]=\"['/Usres', user.id, user.name]\";\r\n          class=\"list-group-item\"\r\n          *ngFor=\"let user of users\">\r\n          {{ user.name }}\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xs-12 col-sm-4\">\r\n    <router-outlet></router-outlet>\r\n      <!-- <app-user></app-user> -->\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  ","import {\r\n  Component\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent {\r\n\r\n  constructor() {}\r\n  users = [{\r\n      id: 1,\r\n      name: 'Max'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Anna'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Chris'\r\n    }\r\n  ]\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>this page was not found</h3>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit, OnDestroy {\r\n  user: {id: number, name: string};\r\n  paramsSubscription: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.user = {\r\n      id: this.route.snapshot.params['id'],\r\n      name: this.route.snapshot.params['name']\r\n    };\r\n    this.paramsSubscription = this.route.params\r\n      .subscribe(\r\n        (params: Params) => {\r\n          this.user.id = params['id'],\r\n          this.user.name = params['name']\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.paramsSubscription.unsubscribe()\r\n  }\r\n\r\n}\r\n","<p>User with ID  {{user.id}} </p>\r\n<p>User name is {{user.name}} </p>\r\n<a [routerLink]=\"['/Users', 10, 'andff']\">Usrrrer</a> ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UserComponent } from './users/user/user.component';\r\nimport { ServersComponent } from './servers/servers.component';\r\nimport { ServerComponent } from './servers/server/server.component';\r\nimport { EditServerComponent } from './servers/edit-server/edit-server.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { AuthGuard } from './auth-guard.service';\r\nimport { CanDeactivateGuard } from './servers/edit-server/can-deactivate-guard.service';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { ServerResolver } from './servers/server/server-resolver.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'Users', component: UsersComponent, children: [ {path: ':id/:name', component: UserComponent}, ]},\r\n  {path: 'Servers', \r\n  // canActivate: [AuthGuard],\r\n  canActivateChild:[AuthGuard],\r\n  component: ServersComponent , \r\n  children: [\r\n    {path: ':id', component: ServerComponent, resolve:{server : ServerResolver}},\r\n    {path: ':id/edit', component: EditServerComponent ,canDeactivate:[CanDeactivateGuard]},\r\n    \r\n  ]},\r\n  // {path: 'PageNotFound', component:  PageNotFoundComponent},\r\n  {path: 'PageNotFound', component:  ErrorPageComponent  , data: {message: 'Page not found!'}},\r\n  {path: '**', redirectTo: '/PageNotFound'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}